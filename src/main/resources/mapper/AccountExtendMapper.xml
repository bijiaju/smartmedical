<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hp.docker_base.mapper.AccountExtendMapper">
  <resultMap id="BaseResultMap" type="com.hp.docker_base.bean.AccountExtend">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="attr_id" jdbcType="VARCHAR" property="attrId" />
    <result column="attr_field_name" jdbcType="VARCHAR" property="attrFieldName" />
    <result column="attr_field_value" jdbcType="VARCHAR" property="attrFieldValue" />
    <result column="extend" jdbcType="VARCHAR" property="extend" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_number" jdbcType="VARCHAR" property="createNumber" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_number" jdbcType="VARCHAR" property="updateNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, tenant_id, account_id, attr_id, attr_field_name, attr_field_value, extend, is_delete, 
    create_time, create_number, update_time, update_number
  </sql>
  <select id="selectByExample" parameterType="com.hp.docker_base.bean.AccountExtendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from idaas_account_extend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from idaas_account_extend
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from idaas_account_extend
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hp.docker_base.bean.AccountExtendExample">
    delete from idaas_account_extend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hp.docker_base.bean.AccountExtend">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into idaas_account_extend (tenant_id, account_id, attr_id, 
      attr_field_name, attr_field_value, extend, 
      is_delete, create_time, create_number, 
      update_time, update_number)
    values (#{tenantId,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR}, #{attrId,jdbcType=VARCHAR}, 
      #{attrFieldName,jdbcType=VARCHAR}, #{attrFieldValue,jdbcType=VARCHAR}, #{extend,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createNumber,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateNumber,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hp.docker_base.bean.AccountExtend">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into idaas_account_extend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="attrId != null">
        attr_id,
      </if>
      <if test="attrFieldName != null">
        attr_field_name,
      </if>
      <if test="attrFieldValue != null">
        attr_field_value,
      </if>
      <if test="extend != null">
        extend,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createNumber != null">
        create_number,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateNumber != null">
        update_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tenantId != null">
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="attrId != null">
        #{attrId,jdbcType=VARCHAR},
      </if>
      <if test="attrFieldName != null">
        #{attrFieldName,jdbcType=VARCHAR},
      </if>
      <if test="attrFieldValue != null">
        #{attrFieldValue,jdbcType=VARCHAR},
      </if>
      <if test="extend != null">
        #{extend,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createNumber != null">
        #{createNumber,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateNumber != null">
        #{updateNumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hp.docker_base.bean.AccountExtendExample" resultType="java.lang.Long">
    select count(*) from idaas_account_extend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update idaas_account_extend
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.attrId != null">
        attr_id = #{record.attrId,jdbcType=VARCHAR},
      </if>
      <if test="record.attrFieldName != null">
        attr_field_name = #{record.attrFieldName,jdbcType=VARCHAR},
      </if>
      <if test="record.attrFieldValue != null">
        attr_field_value = #{record.attrFieldValue,jdbcType=VARCHAR},
      </if>
      <if test="record.extend != null">
        extend = #{record.extend,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createNumber != null">
        create_number = #{record.createNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateNumber != null">
        update_number = #{record.updateNumber,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update idaas_account_extend
    set id = #{record.id,jdbcType=INTEGER},
      tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      attr_id = #{record.attrId,jdbcType=VARCHAR},
      attr_field_name = #{record.attrFieldName,jdbcType=VARCHAR},
      attr_field_value = #{record.attrFieldValue,jdbcType=VARCHAR},
      extend = #{record.extend,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_number = #{record.createNumber,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_number = #{record.updateNumber,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hp.docker_base.bean.AccountExtend">
    update idaas_account_extend
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="attrId != null">
        attr_id = #{attrId,jdbcType=VARCHAR},
      </if>
      <if test="attrFieldName != null">
        attr_field_name = #{attrFieldName,jdbcType=VARCHAR},
      </if>
      <if test="attrFieldValue != null">
        attr_field_value = #{attrFieldValue,jdbcType=VARCHAR},
      </if>
      <if test="extend != null">
        extend = #{extend,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createNumber != null">
        create_number = #{createNumber,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateNumber != null">
        update_number = #{updateNumber,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hp.docker_base.bean.AccountExtend">
    update idaas_account_extend
    set tenant_id = #{tenantId,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=VARCHAR},
      attr_id = #{attrId,jdbcType=VARCHAR},
      attr_field_name = #{attrFieldName,jdbcType=VARCHAR},
      attr_field_value = #{attrFieldValue,jdbcType=VARCHAR},
      extend = #{extend,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_number = #{createNumber,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_number = #{updateNumber,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>