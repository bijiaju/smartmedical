<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hp.docker_base.mapper.MedicalRecordMapper" >
  <resultMap id="BaseResultMap" type="com.hp.docker_base.bean.MedicalRecord" >
  <id column="id" property="id" jdbcType="INTEGER" />
  <result column="uuid" property="uuid" jdbcType="VARCHAR" />
  <result column="patient_id" property="patientId" jdbcType="VARCHAR" />
  <result column="doctor_id" property="doctorId" jdbcType="VARCHAR" />
  <result column="record" property="record" jdbcType="VARCHAR" />
  <result column="treatment_plan" property="treatmentPlan" jdbcType="VARCHAR" />
  <result column="sort" property="sort" jdbcType="INTEGER" />
  <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
  <result column="create_user" property="createUser" jdbcType="VARCHAR" />
  <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
  <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
</resultMap>


  <resultMap id="BaseResultBoMap" type="com.hp.docker_base.bean.bo.MedicalRecordBo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="patient_id" property="patientId" jdbcType="VARCHAR" />
    <result column="doctor_id" property="doctorId" jdbcType="VARCHAR" />
    <result column="record" property="record" jdbcType="VARCHAR" />
    <result column="treatment_plan" property="treatmentPlan" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, uuid, patient_id, doctor_id, record, treatment_plan, sort, is_delete, create_user,
    update_user, create_time, update_time
  </sql>

  <select id="findMedicalRecordByUUID" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM tb_medical_records
    WHERE uuid=#{uuid,jdbcType=VARCHAR}

    AND is_delete=0
  </select>

  <select id="selectMedicalRecordByPostId" resultMap="BaseResultBoMap">
    SELECT record.*,info.`name` as name FROM tb_medical_records record,tb_patient_info info
WHERE record.patient_id=info.uuid
    <if test="postId != null and postId!=''">
      And info.post_id=#{postId}
    </if>

    <if test="keywords != null and keywords!=''">
      AND (name like CONCAT('%',#{keywords},'%'))
    </if>

AND info.is_delete=0
AND record.is_delete=0
    order by record.create_time desc
  </select>

  <select id="selectMedicalRecordByDoctorId" resultMap="BaseResultBoMap">
    SELECT record.*,info.`name` as name FROM tb_medical_records record,tb_patient_info info
    WHERE record.patient_id=info.uuid
    <if test="doctorId != null and doctorId!=''">
      And record.doctor_id=#{doctorId}
    </if>

    <if test="keywords != null and keywords!=''">
      AND (name like CONCAT('%',#{keywords},'%'))
    </if>

    AND info.is_delete=0
    AND record.is_delete=0
    order by record.create_time desc
  </select>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hp.docker_base.bean.MedicalRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_medical_records
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_medical_records
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_medical_records
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hp.docker_base.bean.MedicalRecordExample" >
    delete from tb_medical_records
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hp.docker_base.bean.MedicalRecord" >
    insert into tb_medical_records (id, uuid, patient_id,
                                    doctor_id, record, treatment_plan,
                                    sort, is_delete, create_user,
                                    update_user, create_time, update_time
    )
    values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{patientId,jdbcType=VARCHAR},
            #{doctorId,jdbcType=VARCHAR}, #{record,jdbcType=VARCHAR}, #{treatmentPlan,jdbcType=VARCHAR},
            #{sort,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR},
            #{updateUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
           )
  </insert>
  <insert id="insertSelective" parameterType="com.hp.docker_base.bean.MedicalRecord" >
    insert into tb_medical_records
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="patientId != null" >
        patient_id,
      </if>
      <if test="doctorId != null" >
        doctor_id,
      </if>
      <if test="record != null" >
        record,
      </if>
      <if test="treatmentPlan != null" >
        treatment_plan,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="patientId != null" >
        #{patientId,jdbcType=VARCHAR},
      </if>
      <if test="doctorId != null" >
        #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="record != null" >
        #{record,jdbcType=VARCHAR},
      </if>
      <if test="treatmentPlan != null" >
        #{treatmentPlan,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hp.docker_base.bean.MedicalRecordExample" resultType="java.lang.Integer" >
    select count(*) from tb_medical_records
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_medical_records
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.patientId != null" >
        patient_id = #{record.patientId,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorId != null" >
        doctor_id = #{record.doctorId,jdbcType=VARCHAR},
      </if>
      <if test="record.record != null" >
        record = #{record.record,jdbcType=VARCHAR},
      </if>
      <if test="record.treatmentPlan != null" >
        treatment_plan = #{record.treatmentPlan,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_medical_records
    set id = #{record.id,jdbcType=INTEGER},
    uuid = #{record.uuid,jdbcType=VARCHAR},
    patient_id = #{record.patientId,jdbcType=VARCHAR},
    doctor_id = #{record.doctorId,jdbcType=VARCHAR},
    record = #{record.record,jdbcType=VARCHAR},
    treatment_plan = #{record.treatmentPlan,jdbcType=VARCHAR},
    sort = #{record.sort,jdbcType=INTEGER},
    is_delete = #{record.isDelete,jdbcType=INTEGER},
    create_user = #{record.createUser,jdbcType=VARCHAR},
    update_user = #{record.updateUser,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hp.docker_base.bean.MedicalRecord" >
    update tb_medical_records
    <set >
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="patientId != null" >
        patient_id = #{patientId,jdbcType=VARCHAR},
      </if>
      <if test="doctorId != null" >
        doctor_id = #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="record != null" >
        record = #{record,jdbcType=VARCHAR},
      </if>
      <if test="treatmentPlan != null" >
        treatment_plan = #{treatmentPlan,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hp.docker_base.bean.MedicalRecord" >
    update tb_medical_records
    set uuid = #{uuid,jdbcType=VARCHAR},
        patient_id = #{patientId,jdbcType=VARCHAR},
        doctor_id = #{doctorId,jdbcType=VARCHAR},
        record = #{record,jdbcType=VARCHAR},
        treatment_plan = #{treatmentPlan,jdbcType=VARCHAR},
        sort = #{sort,jdbcType=INTEGER},
        is_delete = #{isDelete,jdbcType=INTEGER},
        create_user = #{createUser,jdbcType=VARCHAR},
        update_user = #{updateUser,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>